- - -
Please keep in mind that the autograder does not assign grades.  Project grades
also take style, efficiency, and other deliverables into account.  Test cases
used for grading may be completely different than those used to evaluate trial
submissions.
- - -

Checking for unexpected file patterns:

-------------------------------------------------------------------------------
Checking for style errors:

----------------------------------------------------------------
./lbs281.cpp

Put a space after a comma or semicolon (line 34)
Inconsistent brace style (lines 42,48)
	Choose between the following two styles and be consistent:
	if ( ... ) {
	or
	if ( ... )
	{
When using new[], also use delete[] to avoid memory leaks (line 53)
----------------------------------------------------------------
./p2.h

Lines with more than 80 characters may not display or print well (line 68)
Put a space after a comma or semicolon (line 71)
Inconsistent brace style (lines 102,116)
	Choose between the following two styles and be consistent:
	if ( ... ) {
	or
	if ( ... )
	{

-------------------------------------------------------------------------------
Build output:
g++ -g -O3 -c lbs281.cpp p2.h
g++ -g -O3 lbs281.o -o lbs281

-------------------------------------------------------------------------------
All expected files found

-------------------------------------------------------------------------------
Test case A: Passed (runtime (sec) 0.003, budget 0.009)
You measured 5.4/5.4 for this test case

-------------------------------------------------------------------------------
Test case B: Passed (runtime (sec) 0.003, budget 0.009)
You measured 5.4/5.4 for this test case

-------------------------------------------------------------------------------
Test case C: Passed (runtime (sec) 0.003, budget 0.008)
You measured 5.4/5.4 for this test case

-------------------------------------------------------------------------------
Test case D: Passed (runtime (sec) 0.003, budget 0.008)
You measured 5.4/5.4 for this test case

-------------------------------------------------------------------------------
Test case E: Passed (runtime (sec) 0.003, budget 0.010)
You measured 5.4/5.4 for this test case

-------------------------------------------------------------------------------
Test case F: Passed (runtime (sec) 0.003, budget 0.006)
You measured 5.4/5.4 for this test case

-------------------------------------------------------------------------------
Test case G: Passed (runtime (sec) 0.004, budget 0.008)
You measured 5.4/5.4 for this test case

-------------------------------------------------------------------------------
Test case H: Passed (runtime (sec) 0.004, budget 0.005)
You measured 5.4/5.4 for this test case

-------------------------------------------------------------------------------
Test case I: Passed (runtime (sec) 0.025, budget 0.030)
You measured 5.4/5.4 for this test case

-------------------------------------------------------------------------------
Test case J: Passed (runtime (sec) 0.021, budget 0.030)
You measured 5.4/5.4 for this test case

-------------------------------------------------------------------------------
Test case K: Passed (runtime (sec) 0.254, budget 0.130)
You measured 4.8/5.4 for this test case

-------------------------------------------------------------------------------
Test case L: Passed (runtime (sec) 0.289, budget 0.130)
You measured 4.8/5.4 for this test case

-------------------------------------------------------------------------------
Test case M: Passed (runtime (sec) 0.003, budget 0.005)
You measured 5.4/5.4 for this test case

-------------------------------------------------------------------------------
Test case N: Passed (runtime (sec) 0.023, budget 0.018)
You measured 4.8/5.4 for this test case

-------------------------------------------------------------------------------
You passed 14 out of 14 test cases measuring 73.4/75.0

-------------------------------------------------------------------------------

Evaluating test case 0
Buggy solutions caught: 0 1 2 3 4 5 

Evaluating test case 1
Buggy solutions caught: 0 1 2 3 4 5 6 7 8 9 

Evaluating test case 2
Buggy solutions caught: 0 1 2 3 4 5 6 7 8 9 

Evaluating test case 3
Buggy solutions caught: 0 1 2 3 4 5 8 

Evaluating test case 4
Buggy solutions caught: 1 2 3 4 5 6 7 8 

Evaluating test case 5
Buggy solutions caught: 0 2 3 4 5 6 7 8 

Evaluating test case 6
Buggy solutions caught: 

Evaluating test case 7
Buggy solutions caught: 0 1 2 3 4 5 8 

Evaluating test case 8
Buggy solutions caught: 0 2 3 4 5 8 

Evaluating test case 9
Buggy solutions caught: 0 1 2 3 4 5 6 8 

Caught 10 of 10 buggy solutions in 9 good test cases, measuring 19.0 of 20.0 effort

Total points earned: coding style: NA, code: 73.4, test cases: 19.0 = 92.4
